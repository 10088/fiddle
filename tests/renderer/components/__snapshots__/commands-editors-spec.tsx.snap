// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditorDropdown component renders 1`] = `
<Fragment>
  <Blueprint3.Popover
    boundary="scrollParent"
    captureDismiss={false}
    content={
      <Blueprint3.Menu>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="main.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Main Process (main.js)"
        />
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="renderer.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Renderer Process (renderer.js)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="renderer.js"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="preload.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Preload (preload.js)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="preload.js"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="index.html"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="HTML (index.html)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="index.html"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="styles.css"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Stylesheet (styles.css)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="styles.css"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <React.Fragment>
          <Blueprint3.MenuDivider />
          <Blueprint3.MenuItem
            disabled={false}
            icon="plus"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Add New File"
          />
        </React.Fragment>
        <React.Fragment>
          <Blueprint3.MenuDivider />
          <Blueprint3.MenuItem
            disabled={false}
            icon="grid-view"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Reset Layout"
          />
        </React.Fragment>
      </Blueprint3.Menu>
    }
    defaultIsOpen={false}
    disabled={false}
    fill={false}
    hasBackdrop={false}
    hoverCloseDelay={300}
    hoverOpenDelay={150}
    inheritDarkTheme={true}
    interactionKind="click"
    minimal={false}
    modifiers={Object {}}
    openOnTargetFocus={true}
    position="bottom"
    targetTagName="span"
    transitionDuration={300}
    usePortal={true}
    wrapperTagName="span"
  >
    <Blueprint3.Button
      icon="applications"
      text="Editors"
    />
  </Blueprint3.Popover>
</Fragment>
`;

exports[`EditorDropdown component renders the extra button if the FIDDLE_DOCS_DEMOS is set 1`] = `
<Fragment>
  <Blueprint3.Popover
    boundary="scrollParent"
    captureDismiss={false}
    content={
      <Blueprint3.Menu>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="main.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Main Process (main.js)"
        />
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="renderer.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Renderer Process (renderer.js)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="renderer.js"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="preload.js"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Preload (preload.js)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="preload.js"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="index.html"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="HTML (index.html)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="index.html"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <Blueprint3.MenuItem
          disabled={false}
          icon="eye-open"
          id="styles.css"
          multiline={false}
          onClick={[Function]}
          popoverProps={Object {}}
          shouldDismissPopover={true}
          text="Stylesheet (styles.css)"
        >
          <Blueprint3.MenuItem
            disabled={false}
            icon="cross"
            id="styles.css"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Remove"
          />
        </Blueprint3.MenuItem>
        <React.Fragment>
          <Blueprint3.MenuDivider />
          <Blueprint3.MenuItem
            disabled={false}
            icon="plus"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Add New File"
          />
        </React.Fragment>
        <React.Fragment>
          <Blueprint3.MenuDivider />
          <Blueprint3.MenuItem
            disabled={false}
            icon="grid-view"
            multiline={false}
            onClick={[Function]}
            popoverProps={Object {}}
            shouldDismissPopover={true}
            text="Reset Layout"
          />
        </React.Fragment>
      </Blueprint3.Menu>
    }
    defaultIsOpen={false}
    disabled={false}
    fill={false}
    hasBackdrop={false}
    hoverCloseDelay={300}
    hoverOpenDelay={150}
    inheritDarkTheme={true}
    interactionKind="click"
    minimal={false}
    modifiers={Object {}}
    openOnTargetFocus={true}
    position="bottom"
    targetTagName="span"
    transitionDuration={300}
    usePortal={true}
    wrapperTagName="span"
  >
    <Blueprint3.Button
      icon="applications"
      text="Editors"
    />
  </Blueprint3.Popover>
</Fragment>
`;
